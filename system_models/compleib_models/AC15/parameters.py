# This file was autogenerated from the template: parameters.py.template (2022-10-10 15:53:24).

import sys
import os
import numpy as np
import sympy as sp

import tabulate as tab


#link to documentation with examples: https://ackrep-doc.readthedocs.io/en/latest/devdoc/contributing_data.html


# set model name
model_name = 'Mach 2.7 flight condition of a supersonic transport aircraft'


# ---------- create symbolic parameters
A = sp.MatrixSymbol('A', 4, 4)
B = sp.MatrixSymbol('B', 4, 2)
B1 = sp.MatrixSymbol('B1', 4, 4)
C1 = sp.MatrixSymbol('C1', 6, 4)
C = sp.MatrixSymbol('C', 3, 4)
D11 = sp.MatrixSymbol('D11', 6, 4)
D12 = sp.MatrixSymbol('D12', 6, 2)
D21 = sp.MatrixSymbol('D21', 3, 4)

pp_symb = [A, B, B1, C1, C, D11, D12, D21]


# ---------- create auxiliary symbolic parameters 

# set numerical values of auxiliary parameters
# trailing "_nv" stands for "numerical value"
A_nv = sp.Matrix(np.array([[-3.70e-02,  1.23e-02,  5.50e-04, -1.00e+00],
       [ 0.00e+00,  0.00e+00,  1.00e+00,  0.00e+00],
       [-6.37e+00,  0.00e+00, -2.30e-01,  6.18e-02],
       [ 1.25e+00,  0.00e+00,  1.60e-02, -4.57e-02]]))
B_nv = sp.Matrix(np.array([[ 8.40e-04,  2.36e-04],
       [ 0.00e+00,  0.00e+00],
       [ 8.00e-02,  8.04e-01],
       [-8.62e-02, -6.65e-02]]))
B1_nv = sp.Matrix(np.array([[ 8.40e-04,  2.36e-04],
       [ 0.00e+00,  0.00e+00],
       [ 8.00e-02,  8.04e-01],
       [-8.62e-02, -6.65e-02]]))
C1_nv = sp.Matrix(np.array([[1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.]]))
C_nv = sp.Matrix(np.array([[0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]]))
D11_nv = sp.Matrix(np.array([[0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.]]))
D12_nv = sp.Matrix(np.array([[0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.],
       [1., 0.],
       [0., 1.]]))
D21_nv = sp.Matrix(np.array([[0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.]]))


# ---------- create symbolic parameter functions
# parameter values can be constant/fixed values OR set in relation to other parameters (for example: a = 2*b)  


# list of symbolic parameter functions
# tailing "_sf" stands for "symbolic parameter function"
pp_sf = [A_nv, B_nv, B1_nv, C1_nv, C_nv, D11_nv, D12_nv, D21_nv]


#  ---------- list for substitution
# -- entries are tuples like: (independent symbolic parameter, numerical value)
pp_subs_list = []


# OPTONAL: Dictionary which defines how certain variables shall be written
# in the table - key: Symbolic Variable, Value: LaTeX Representation/Code
# useful for example for complex variables: {Z: r"\underline{Z}"}
latex_names = {}


# ---------- Define LaTeX table

# Define table header 
# DON'T CHANGE FOLLOWING ENTRIES: "Symbol", "Value"
tabular_header = ["Symbol", "Value"]

# Define column text alignments
col_alignment = ["center", "left"]


# Define Entries of all columns before the Symbol-Column
# --- Entries need to be latex code
col_1 = [] 

# contains all lists of the columns before the "Symbol" Column
# --- Empty list, if there are no columns before the "Symbol" Column
start_columns_list = []


# Define Entries of the columns after the Value-Column
# --- Entries need to be latex code
col_4 = []

# contains all lists of columns after the FIX ENTRIES
# --- Empty list, if there are no columns after the "Value" column
end_columns_list = []