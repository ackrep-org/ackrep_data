# This file was autogenerated from the template: parameters.py.template (2022-10-10 15:52:20).

import sys
import os
import numpy as np
import sympy as sp

import tabulate as tab


#link to documentation with examples: https://ackrep-doc.readthedocs.io/en/latest/devdoc/contributing_data.html


# set model name
model_name = 'THE AIRCRAFT L- 1011 MODEL ???'


# ---------- create symbolic parameters
A = sp.MatrixSymbol('A', 7, 7)
B = sp.MatrixSymbol('B', 7, 2)
B1 = sp.MatrixSymbol('B1', 7, 7)
C1 = sp.MatrixSymbol('C1', 7, 7)
C = sp.MatrixSymbol('C', 4, 7)
D11 = sp.MatrixSymbol('D11', 7, 7)
D12 = sp.MatrixSymbol('D12', 7, 2)
D21 = sp.MatrixSymbol('D21', 4, 7)

pp_symb = [A, B, B1, C1, C, D11, D12, D21]


# ---------- create auxiliary symbolic parameters 

# set numerical values of auxiliary parameters
# trailing "_nv" stands for "numerical value"
A_nv = sp.Matrix(np.array([[ 0.000e+00,  0.000e+00,  1.000e+00,  0.000e+00,  0.000e+00,
         0.000e+00,  0.000e+00],
       [ 0.000e+00, -1.540e-01, -4.200e-03,  1.540e+00,  0.000e+00,
        -7.440e-01, -3.200e-02],
       [ 0.000e+00,  2.490e-01, -1.000e+00, -5.200e+00,  0.000e+00,
         3.370e-01, -1.120e+00],
       [ 3.860e-02, -9.960e-01, -3.000e-04, -2.117e+00,  0.000e+00,
         2.000e-02,  0.000e+00],
       [ 0.000e+00,  5.000e-01,  0.000e+00,  0.000e+00, -4.000e+00,
         0.000e+00,  0.000e+00],
       [ 0.000e+00,  0.000e+00,  0.000e+00,  0.000e+00,  0.000e+00,
        -2.000e+01,  0.000e+00],
       [ 0.000e+00,  0.000e+00,  0.000e+00,  0.000e+00,  0.000e+00,
         0.000e+00, -2.500e+01]]))
B_nv = sp.Matrix(np.array([[ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [20.,  0.],
       [ 0., 25.]]))
B1_nv = sp.Matrix(np.array([[ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [20.,  0.],
       [ 0., 25.]]))
C1_nv = sp.Matrix(np.array([[1., 0., 0., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0., 0., 0.],
       [0., 0., 1., 0., 0., 0., 0.],
       [0., 0., 0., 1., 0., 0., 0.],
       [0., 0., 0., 0., 1., 0., 0.],
       [0., 0., 0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 0., 0., 1.]]))
C_nv = sp.Matrix(np.array([[ 0.00e+00, -1.54e-01, -4.20e-03,  1.54e+00,  0.00e+00, -7.44e-01,
        -3.20e-02],
       [ 0.00e+00,  2.49e-01, -1.00e+00, -5.20e+00,  0.00e+00,  3.37e-01,
        -1.12e+00],
       [ 1.00e+00,  0.00e+00,  0.00e+00,  0.00e+00,  0.00e+00,  0.00e+00,
         0.00e+00],
       [ 0.00e+00,  0.00e+00,  0.00e+00,  0.00e+00,  1.00e+00,  0.00e+00,
         0.00e+00]]))
D11_nv = sp.Matrix(np.array([[0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.]]))
D12_nv = sp.Matrix(np.array([[0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.],
       [1., 0.],
       [0., 1.]]))
D21_nv = sp.Matrix(np.array([[0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0.]]))


# ---------- create symbolic parameter functions
# parameter values can be constant/fixed values OR set in relation to other parameters (for example: a = 2*b)  


# list of symbolic parameter functions
# tailing "_sf" stands for "symbolic parameter function"
pp_sf = [A_nv, B_nv, B1_nv, C1_nv, C_nv, D11_nv, D12_nv, D21_nv]


#  ---------- list for substitution
# -- entries are tuples like: (independent symbolic parameter, numerical value)
pp_subs_list = []


# OPTONAL: Dictionary which defines how certain variables shall be written
# in the table - key: Symbolic Variable, Value: LaTeX Representation/Code
# useful for example for complex variables: {Z: r"\underline{Z}"}
latex_names = {}


# ---------- Define LaTeX table

# Define table header 
# DON'T CHANGE FOLLOWING ENTRIES: "Symbol", "Value"
tabular_header = ["Symbol", "Value"]

# Define column text alignments
col_alignment = ["center", "left"]


# Define Entries of all columns before the Symbol-Column
# --- Entries need to be latex code
col_1 = [] 

# contains all lists of the columns before the "Symbol" Column
# --- Empty list, if there are no columns before the "Symbol" Column
start_columns_list = []


# Define Entries of the columns after the Value-Column
# --- Entries need to be latex code
col_4 = []

# contains all lists of columns after the FIX ENTRIES
# --- Empty list, if there are no columns after the "Value" column
end_columns_list = []