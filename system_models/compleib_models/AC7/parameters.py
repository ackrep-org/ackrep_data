# This file was autogenerated from the template: parameters.py.template (2022-10-10 15:52:20).

import sys
import os
import numpy as np
import sympy as sp

import tabulate as tab


#link to documentation with examples: https://ackrep-doc.readthedocs.io/en/latest/devdoc/contributing_data.html


# set model name
model_name = 'Transport Aircraft model Boing flight condition VMIN'


# ---------- create symbolic parameters
A = sp.MatrixSymbol('A', 9, 9)
B = sp.MatrixSymbol('B', 9, 1)
B1 = sp.MatrixSymbol('B1', 9, 4)
C1 = sp.MatrixSymbol('C1', 1, 9)
C = sp.MatrixSymbol('C', 2, 9)
D11 = sp.MatrixSymbol('D11', 1, 4)
D12 = sp.MatrixSymbol('D12', 1, 1)
D21 = sp.MatrixSymbol('D21', 2, 4)

pp_symb = [A, B, B1, C1, C, D11, D12, D21]


# ---------- create auxiliary symbolic parameters 

# set numerical values of auxiliary parameters
# trailing "_nv" stands for "numerical value"
A_nv = sp.Matrix(np.array([[-6.25400e-02,  1.88800e-02,  0.00000e+00, -5.61410e-01,
        -2.75100e-02,  0.00000e+00,  6.25400e-02, -1.23000e-03,
         0.00000e+00],
       [ 1.08900e-02, -9.92800e-01,  9.97950e-01,  9.70000e-04,
        -7.05700e-02,  0.00000e+00, -1.08900e-02,  6.44900e-02,
         0.00000e+00],
       [ 7.74300e-02,  1.67540e+00, -1.31111e+00, -3.00000e-04,
        -4.25030e+00,  0.00000e+00, -7.74300e-02, -1.08830e-01,
         0.00000e+00],
       [ 0.00000e+00,  0.00000e+00,  1.00000e+00,  0.00000e+00,
         0.00000e+00,  0.00000e+00,  0.00000e+00,  0.00000e+00,
         0.00000e+00],
       [ 0.00000e+00,  0.00000e+00,  0.00000e+00,  0.00000e+00,
        -2.00000e+01,  2.00000e+01,  0.00000e+00,  0.00000e+00,
         0.00000e+00],
       [ 0.00000e+00,  0.00000e+00,  0.00000e+00,  0.00000e+00,
         0.00000e+00, -3.00000e+01,  0.00000e+00,  0.00000e+00,
         0.00000e+00],
       [ 0.00000e+00,  0.00000e+00,  0.00000e+00,  0.00000e+00,
         0.00000e+00,  0.00000e+00, -8.82060e-01,  0.00000e+00,
         0.00000e+00],
       [ 0.00000e+00,  0.00000e+00,  0.00000e+00,  0.00000e+00,
         0.00000e+00,  0.00000e+00,  0.00000e+00, -8.82060e-01,
         8.82000e-03],
       [ 0.00000e+00,  0.00000e+00,  0.00000e+00,  0.00000e+00,
         0.00000e+00,  0.00000e+00,  0.00000e+00, -8.82000e-03,
        -8.82060e-01]]))
B_nv = sp.Matrix(np.array([[ 0.],
       [ 0.],
       [ 0.],
       [ 0.],
       [ 0.],
       [30.],
       [ 0.],
       [ 0.],
       [ 0.]]))
B1_nv = sp.Matrix(np.array([[ 0.],
       [ 0.],
       [ 0.],
       [ 0.],
       [ 0.],
       [30.],
       [ 0.],
       [ 0.],
       [ 0.]]))
C1_nv = sp.Matrix(np.array([[-3.66988419e-03,  3.36611112e-01,  6.92964646e-04,
        -2.19203102e-04,  2.38860671e-02,  0.00000000e+00,
         3.66988419e-03, -2.18213153e-02,  0.00000000e+00]]))
C_nv = sp.Matrix(np.array([[-5.1900e-03,  4.7604e-01,  9.8000e-04, -3.1000e-04,  3.3780e-02,
         0.0000e+00,  5.1900e-03, -3.0860e-02,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]]))
D11_nv = sp.Matrix(np.array([[0., 0., 0., 0.]]))
D12_nv = sp.Matrix(np.array([0.70710678]))
D21_nv = sp.Matrix(np.array([[0., 0., 0., 0.],
       [0., 0., 0., 1.]]))


# ---------- create symbolic parameter functions
# parameter values can be constant/fixed values OR set in relation to other parameters (for example: a = 2*b)  


# list of symbolic parameter functions
# tailing "_sf" stands for "symbolic parameter function"
pp_sf = [A_nv, B_nv, B1_nv, C1_nv, C_nv, D11_nv, D12_nv, D21_nv]


#  ---------- list for substitution
# -- entries are tuples like: (independent symbolic parameter, numerical value)
pp_subs_list = []


# OPTONAL: Dictionary which defines how certain variables shall be written
# in the table - key: Symbolic Variable, Value: LaTeX Representation/Code
# useful for example for complex variables: {Z: r"\underline{Z}"}
latex_names = {}


# ---------- Define LaTeX table

# Define table header 
# DON'T CHANGE FOLLOWING ENTRIES: "Symbol", "Value"
tabular_header = ["Symbol", "Value"]

# Define column text alignments
col_alignment = ["center", "left"]


# Define Entries of all columns before the Symbol-Column
# --- Entries need to be latex code
col_1 = [] 

# contains all lists of the columns before the "Symbol" Column
# --- Empty list, if there are no columns before the "Symbol" Column
start_columns_list = []


# Define Entries of the columns after the Value-Column
# --- Entries need to be latex code
col_4 = []

# contains all lists of columns after the FIX ENTRIES
# --- Empty list, if there are no columns after the "Value" column
end_columns_list = []