# This file was autogenerated from the template: parameters.py.template (2022-10-10 15:53:25).

import sys
import os
import numpy as np
import sympy as sp

import tabulate as tab


#link to documentation with examples: https://ackrep-doc.readthedocs.io/en/latest/devdoc/contributing_data.html


# set model name
model_name = 'Bell 201A-1 helicopter D.-'


# ---------- create symbolic parameters
A = sp.MatrixSymbol('A', 8, 8)
B = sp.MatrixSymbol('B', 8, 4)
B1 = sp.MatrixSymbol('B1', 8, 1)
C1 = sp.MatrixSymbol('C1', 10, 8)
C = sp.MatrixSymbol('C', 6, 8)
D11 = sp.MatrixSymbol('D11', 10, 1)
D12 = sp.MatrixSymbol('D12', 10, 4)
D21 = sp.MatrixSymbol('D21', 6, 1)

pp_symb = [A, B, B1, C1, C, D11, D12, D21]


# ---------- create auxiliary symbolic parameters 

# set numerical values of auxiliary parameters
# trailing "_nv" stands for "numerical value"
A_nv = sp.Matrix(np.array([[-4.600e-03,  3.800e-02,  3.259e-01, -4.500e-03, -4.020e-01,
        -7.300e-02, -9.810e+00,  0.000e+00],
       [-1.978e-01, -5.667e-01,  3.570e-01, -3.780e-02, -2.149e-01,
         5.683e-01,  0.000e+00,  0.000e+00],
       [ 3.900e-03, -2.900e-03, -2.947e-01,  7.000e-03,  2.266e-01,
         1.480e-02,  0.000e+00,  0.000e+00],
       [ 1.330e-02, -1.400e-03, -4.076e-01, -6.540e-02, -4.093e-01,
         2.674e-01,  0.000e+00,  9.810e+00],
       [ 1.270e-02, -1.000e-02, -8.152e-01, -3.970e-02, -8.210e-01,
         1.442e-01,  0.000e+00,  0.000e+00],
       [-2.850e-02, -2.320e-02,  1.064e-01,  7.090e-02, -2.786e-01,
        -7.396e-01,  0.000e+00,  0.000e+00],
       [ 0.000e+00,  0.000e+00,  1.000e+00,  0.000e+00,  0.000e+00,
         0.000e+00,  0.000e+00,  0.000e+00],
       [ 0.000e+00,  0.000e+00,  0.000e+00,  0.000e+00,  1.000e+00,
         0.000e+00,  0.000e+00,  0.000e+00]]))
B_nv = sp.Matrix(np.array([[ 6.7600e-02,  1.2210e-01, -1.0000e-04, -1.6000e-03],
       [-1.1151e+00,  1.0550e-01,  3.9000e-03,  3.5000e-03],
       [ 6.2000e-03, -6.8200e-02,  1.0000e-03, -3.5000e-03],
       [-1.7000e-02,  4.9000e-03,  1.0670e-01,  1.6920e-01],
       [-1.2900e-02,  1.0600e-02,  2.2270e-01,  1.4300e-01],
       [ 1.3900e-01,  5.9000e-03,  3.2600e-02, -4.0700e-01],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]]))
B1_nv = sp.Matrix(np.array([[ 6.7600e-02,  1.2210e-01, -1.0000e-04, -1.6000e-03],
       [-1.1151e+00,  1.0550e-01,  3.9000e-03,  3.5000e-03],
       [ 6.2000e-03, -6.8200e-02,  1.0000e-03, -3.5000e-03],
       [-1.7000e-02,  4.9000e-03,  1.0670e-01,  1.6920e-01],
       [-1.2900e-02,  1.0600e-02,  2.2270e-01,  1.4300e-01],
       [ 1.3900e-01,  5.9000e-03,  3.2600e-02, -4.0700e-01],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]]))
C1_nv = sp.Matrix(np.array([[0., 1., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 0., 0., 0., 1.],
       [0., 0., 0., 0., 0., 1., 0., 0.],
       [0., 0., 1., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 1., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 0., 0.]]))
C_nv = sp.Matrix(np.array([[0., 1., 0., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 0., 0., 0., 1.],
       [0., 0., 0., 0., 0., 1., 0., 0.],
       [0., 0., 1., 0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 1., 0., 0., 0.]]))
D11_nv = sp.Matrix(np.array([[0.],
       [0.],
       [0.],
       [0.],
       [0.],
       [0.],
       [0.],
       [0.],
       [0.],
       [0.]]))
D12_nv = sp.Matrix(np.array([[0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [1., 0., 0., 0.],
       [0., 1., 0., 0.],
       [0., 0., 1., 0.],
       [0., 0., 0., 1.]]))
D21_nv = sp.Matrix(np.array([[0.  ],
       [0.1 ],
       [0.  ],
       [0.  ],
       [0.05],
       [0.  ]]))


# ---------- create symbolic parameter functions
# parameter values can be constant/fixed values OR set in relation to other parameters (for example: a = 2*b)  


# list of symbolic parameter functions
# tailing "_sf" stands for "symbolic parameter function"
pp_sf = [A_nv, B_nv, B1_nv, C1_nv, C_nv, D11_nv, D12_nv, D21_nv]


#  ---------- list for substitution
# -- entries are tuples like: (independent symbolic parameter, numerical value)
pp_subs_list = []


# OPTONAL: Dictionary which defines how certain variables shall be written
# in the table - key: Symbolic Variable, Value: LaTeX Representation/Code
# useful for example for complex variables: {Z: r"\underline{Z}"}
latex_names = {}


# ---------- Define LaTeX table

# Define table header 
# DON'T CHANGE FOLLOWING ENTRIES: "Symbol", "Value"
tabular_header = ["Symbol", "Value"]

# Define column text alignments
col_alignment = ["center", "left"]


# Define Entries of all columns before the Symbol-Column
# --- Entries need to be latex code
col_1 = [] 

# contains all lists of the columns before the "Symbol" Column
# --- Empty list, if there are no columns before the "Symbol" Column
start_columns_list = []


# Define Entries of the columns after the Value-Column
# --- Entries need to be latex code
col_4 = []

# contains all lists of columns after the FIX ENTRIES
# --- Empty list, if there are no columns after the "Value" column
end_columns_list = []