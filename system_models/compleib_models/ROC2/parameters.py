# This file was autogenerated from the template: parameters.py.template (2022-10-10 15:58:18).

import sys
import os
import numpy as np
import sympy as sp

import tabulate as tab


#link to documentation with examples: https://ackrep-doc.readthedocs.io/en/latest/devdoc/contributing_data.html


# set model name
model_name = 'Transport Aircraft model Boing flight condition VFC/MFC'


# ---------- create symbolic parameters
A = sp.MatrixSymbol('A', 10, 10)
B = sp.MatrixSymbol('B', 10, 2)
B1 = sp.MatrixSymbol('B1', 10, 4)
C1 = sp.MatrixSymbol('C1', 1, 10)
C = sp.MatrixSymbol('C', 3, 10)
D11 = sp.MatrixSymbol('D11', 1, 4)
D12 = sp.MatrixSymbol('D12', 1, 2)
D21 = sp.MatrixSymbol('D21', 3, 4)

pp_symb = [A, B, B1, C1, C, D11, D12, D21]


# ---------- create auxiliary symbolic parameters 

# set numerical values of auxiliary parameters
# trailing "_nv" stands for "numerical value"
A_nv = sp.Matrix(np.array([[-7.0200e-03,  6.3390e-02,  5.1800e-03, -5.5566e-01, -6.1120e-02,
         0.0000e+00,  7.1200e-03, -5.6600e-03,  0.0000e+00,  0.0000e+00],
       [-1.6540e-02, -3.8892e-01,  1.0057e+00,  5.9100e-03, -4.6320e-02,
         0.0000e+00,  1.6540e-02,  4.0180e-02,  0.0000e+00,  0.0000e+00],
       [ 6.1000e-04,  3.5210e-01, -4.7381e-01,  0.0000e+00,  1.7862e+00,
         0.0000e+00, -6.1000e-04, -3.6380e-02,  0.0000e+00,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  1.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -2.0000e+01,
         2.0000e+01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
        -3.0000e+01,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -5.5454e-01,  0.0000e+00,  0.0000e+00,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -5.5454e-01,  5.5500e-03,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -5.5500e-03, -5.5454e-01,  0.0000e+00],
       [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]]))
B_nv = sp.Matrix(np.array([[ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0., 30.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 1.,  0.]]))
B1_nv = sp.Matrix(np.array([[ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0., 30.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 0.,  0.],
       [ 1.,  0.]]))
C1_nv = sp.Matrix(np.array([[ 0.00353553,  0.082583  , -0.00121622,  0.        , -0.00999142,
         0.        , -0.00353553, -0.00853478,  0.        ,  0.        ]]))
C_nv = sp.Matrix(np.array([[ 0.     ,  0.     ,  0.     ,  0.     ,  0.     ,  0.     ,
         0.     ,  0.     ,  0.     ,  1.     ],
       [ 0.005  ,  0.11679, -0.00172,  0.     , -0.01413,  0.     ,
        -0.005  , -0.01207,  0.     ,  0.     ],
       [ 0.     ,  0.     ,  1.     ,  0.     ,  0.     ,  0.     ,
         0.     ,  0.     ,  0.     ,  0.     ]]))
D11_nv = sp.Matrix(np.array([[0., 0., 0., 0.]]))
D12_nv = sp.Matrix(np.array([[0.        , 0.70710678]]))
D21_nv = sp.Matrix(np.array([[0., 0., 0., 0.],
       [0., 0., 0., 0.],
       [0., 0., 0., 1.]]))


# ---------- create symbolic parameter functions
# parameter values can be constant/fixed values OR set in relation to other parameters (for example: a = 2*b)  


# list of symbolic parameter functions
# tailing "_sf" stands for "symbolic parameter function"
pp_sf = [A_nv, B_nv, B1_nv, C1_nv, C_nv, D11_nv, D12_nv, D21_nv]


#  ---------- list for substitution
# -- entries are tuples like: (independent symbolic parameter, numerical value)
pp_subs_list = []


# OPTONAL: Dictionary which defines how certain variables shall be written
# in the table - key: Symbolic Variable, Value: LaTeX Representation/Code
# useful for example for complex variables: {Z: r"\underline{Z}"}
latex_names = {}


# ---------- Define LaTeX table

# Define table header 
# DON'T CHANGE FOLLOWING ENTRIES: "Symbol", "Value"
tabular_header = ["Symbol", "Value"]

# Define column text alignments
col_alignment = ["center", "left"]


# Define Entries of all columns before the Symbol-Column
# --- Entries need to be latex code
col_1 = [] 

# contains all lists of the columns before the "Symbol" Column
# --- Empty list, if there are no columns before the "Symbol" Column
start_columns_list = []


# Define Entries of the columns after the Value-Column
# --- Entries need to be latex code
col_4 = []

# contains all lists of columns after the FIX ENTRIES
# --- Empty list, if there are no columns after the "Value" column
end_columns_list = []